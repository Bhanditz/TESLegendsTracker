apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.firebase-crash'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 26
    buildToolsVersion "27.0.0"
    packagingOptions.excludes = ['META-INF/services/javax.annotation.processing.Processor',
                                 'META-INF/LICENSE.txt', 'META-INF/NOTICE.txt', 'META-INF/README.txt',
                                 'META-INF/MANIFEST.MF', 'LICENSE.txt', 'NOTICE.txt', 'README.txt', '.readme']

    def props = new Properties()
    props.load(file("secrets.properties").newInputStream())
    defaultConfig {
        applicationId "com.ediposouza.teslesgendstracker"
        minSdkVersion prepareToRelease ? 17 : 21
        targetSdkVersion 27
        versionCode appVersionCode
        versionName appVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "boolean", "ENABLE_LOGS_IN_RELEASE", "false"
        buildConfigField "boolean", "PREPARE_TO_RELEASE", "$prepareToRelease"
        resValue "string", "app_ads_card_full", props.getProperty('key_ads_card_full')
        resValue "string", "app_ads_card_list", props.getProperty('key_ads_card_list')
        resValue "string", "app_ads_deck_list", props.getProperty('key_ads_deck_list')
        resValue "string", "app_ads_new_deck_card_list", props.getProperty('key_ads_new_deck_card_list')
        resValue "string", "app_ads_match_history_list", props.getProperty('key_ads_match_history_list')
        resValue "string", "app_ads_match_statistics_class_full", props.getProperty('key_ads_match_statistics_class_full')
        resValue "string", "app_ads_new_matches_full", props.getProperty('key_ads_new_matches_full')
        resValue "string", "app_ads_news_list", props.getProperty('key_ads_news_list')
        resValue "string", "app_ads_season_list", props.getProperty('key_ads_season_list')
        resValue "string", "app_ads_patch_full", props.getProperty('key_ads_patch_full')
        resValue "string", "key_ads_intersticial", props.getProperty('key_ads_intersticial')
        resValue "string", "facebook_app_id", props.getProperty('key_facebook_app_id')
        resValue "string", "mixpanel_app_id", props.getProperty('key_mixpanel_app_id')
        multiDexEnabled true
        vectorDrawables.useSupportLibrary true
    }
    signingConfigs {
        release {
            try {
                storeFile file('AppsByEdipo.keystore')
                storePassword props.getProperty('keystore_pass')
                keyAlias "tes_legends_tracker"
                keyPassword props.getProperty('tes_legends_tracker_pass')
            } catch (e) {
                println(e.message)
            }
        }
    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
        }
        release {
            debuggable false
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

}

kotlin {
    experimental {
        coroutines "enable"
    }
}

ext {
    anko_version = "0.10.3"
    okIOVersion = "1.13.0"
    okHttpVersion = "3.9.1"
    playServicesVersion = "11.6.2"
    supportLibraryVersion = "27.0.2"
    threetenabpVersion = "1.0.5"

    testMockitoVersion = "2.7.+"
    testRoboletricVersion = "3.2.+"
}

configurations.all {
    resolutionStrategy{
        eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == "com.android.support" && !requested.name.startsWith("multidex")) {
                details.useVersion "$supportLibraryVersion"
            }
        }
        force "com.android.support:support-annotations:$supportLibraryVersion"
        force "com.squareup.okio:okio:$okIOVersion"
        force "com.squareup.okhttp3:okhttp:$okHttpVersion"
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation(name: 'clansFAB', ext: 'aar')
    implementation(name: 'googleinapputil', ext: 'aar')
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.anko:anko-common:$anko_version"
    implementation "org.jetbrains.anko:anko-coroutines:$anko_version"

    //Support
    implementation "com.android.support:cardview-v7:$supportLibraryVersion"
    implementation "com.android.support:customtabs:$supportLibraryVersion"
    implementation "com.android.support:design:$supportLibraryVersion"
    implementation "com.android.support:percent:$supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibraryVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:multidex:1.0.1'

    //Google
    implementation "com.google.android.gms:play-services-auth:$playServicesVersion"
    implementation "com.google.android.gms:play-services-gcm:$playServicesVersion"
    implementation "com.google.firebase:firebase-auth:$playServicesVersion"
    implementation "com.google.firebase:firebase-ads:$playServicesVersion"
    implementation "com.google.firebase:firebase-core:$playServicesVersion"
    implementation "com.google.firebase:firebase-config:$playServicesVersion"
    implementation "com.google.firebase:firebase-database:$playServicesVersion"
    implementation "com.google.firebase:firebase-messaging:$playServicesVersion"
    implementation "com.google.firebase:firebase-perf:$playServicesVersion"
    releaseImplementation "com.google.firebase:firebase-crash:$playServicesVersion"
    implementation "com.google.firebase:firebase-storage:$playServicesVersion"
    implementation "com.firebaseui:firebase-ui-storage:2.1.1"

    //Fabric
    implementation('com.crashlytics.sdk.android:answers:1.4.1') {
        transitive = true
    }
    implementation('com.crashlytics.sdk.android:crashlytics:2.8.0') {
        transitive = true
    }

    //Networking
    implementation "com.squareup.okio:okio:$okIOVersion"
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.github.bumptech.glide:glide:3.8.0"
    implementation "com.github.bumptech.glide:okhttp3-integration:1.5.0"

    //Others
    implementation 'com.facebook.android:facebook-android-sdk:4.28.0'
    implementation "com.jakewharton.threetenabp:threetenabp:$threetenabpVersion"
    implementation 'com.jakewharton.timber:timber:4.6.0'
    implementation 'com.mixpanel.android:mixpanel-android:5.2.1'
    implementation 'com.github.hotchemi:android-rate:1.0.1'
    implementation 'com.github.emanzanoaxa:RippleEffect:52ea2a0ab6'
    implementation 'com.github.gabrielemariotti.changeloglib:changelog:2.1.0'
    implementation 'org.greenrobot:eventbus:3.0.0'

    //    implementation "com.github.traex.rippleeffect:library:1.3"
    implementation 'com.github.miguelbcr:TableFixHeaders-Wrapper:0.2.0'
    implementation 'com.timehop.stickyheadersrecyclerview:library:0.4.3'
    implementation 'com.kyleduo.switchbutton:library:1.4.6'
    implementation 'jp.wasabeef:recyclerview-animators:2.2.7'
    implementation 'org.jsoup:jsoup:1.11.2'
    implementation 'com.github.chrisbanes:PhotoView:2.1.3'
    testImplementation 'junit:junit:4.12'
    testImplementation "com.jakewharton.threetenabp:threetenabp:$threetenabpVersion"
    testImplementation "org.mockito:mockito-core:$testMockitoVersion"
    testImplementation "org.robolectric:robolectric:$testRoboletricVersion"
    testImplementation "org.robolectric:shadows-multidex:$testRoboletricVersion"
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}

apply plugin: 'com.google.gms.google-services'
